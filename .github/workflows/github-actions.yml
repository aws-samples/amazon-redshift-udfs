name: GitHub Actions Demo
on: [push]
jobs:
  DeployCode:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ vars.AWS_ID }}
          aws-secret-access-key: ${{ secrets.AWS_KEY }}
          aws-region: ${{ vars.REGION }}
      - id: files
        uses: jitterbit/get-changed-files@v1
        with:
          format: 'json'
      - run: |
          set -e
          folders=""
          files=`jq -r '.[]' <<<'${{ steps.files.outputs.added_modified }}'`

          for file in ${files[@]}; do
            folders="$folders $(dirname $file)"
          done
          folders="$folders" | tr " " "\n" | sort | uniq | tr "\n" " "
          cd bin
          type=""
          function=""
          for folder in $folders; do
              IFS="/" read -ra PARTS <<< "$folder"
              if [[ $folder == *-udfs/* ]] && [[ $function != ${PARTS[1]} ]]; then
                type=${PARTS[0]}
                function=${PARTS[1]}
                key=${{ secrets.S3_KEY }}
                if ! [[ -z "${key// }" ]]; then
                  k="-k ${{ secrets.S3_KEY }}"
                fi
                ./deployFunction.sh -t $type -f "$function" -s ${{ vars.S3_BUCKET }} $k -r ${{ vars.IAM_ROLE }} -c ${{ vars.CLUSTER }} -d ${{ vars.DB }} -u ${{ vars.USER }} -n ${{ vars.SCHEMA }} -g ${{ vars.SECURITY_GROUP }} -x ${{ vars.SUBNET }}
                ./testFunction.sh -t $type -f "$function" -c ${{ vars.CLUSTER }} -d ${{ vars.DB }} -u ${{ vars.USER }} -n ${{ vars.SCHEMA }}
              else
                echo Ignoring: $folder
              fi
          done
